def fprint(field): 
    print('    0     1     2   ') 
    for i in range(N): 
        print(i, ' '.join(field[i])) 

def user1_input(): 
    user_cross = [] 
    while True: 
        user_cross = list(map(int, list(input("Ваш ход, ,благородный рыцарь, сделайте свой ход в борьбе с гномами, формат (строка колонка): ").split()))) 
        if len(user_cross) == 2 and all(list(map(lambda x: x in range(N), user_cross))): 
            row, col = user_cross[0], user_cross[1] 
            if empty_cell(row, col): 
                print("Ваш выбор, Сэр рыцарь: ", user_cross) 
                return user_cross 
            else: 
                print("Гномы заложили ловушку на данном поле, выберите другое") 
        else: 
            print("Кажется вы не сделали что-то не так, попробуйте ещё раз!")

def user2_input(): 
    user_cross = [] 
    while True: 
        user_cross = list(map(int, list(input("Твий ход, брат гном! нанеси удар по глупи рыцарь, формат (строка колонка): ").split()))) 
        if len(user_cross) == 2 and all(list(map(lambda x: x in range(N), user_cross))): 
            row, col = user_cross[0], user_cross[1] 
            if empty_cell(row, col): 
                print("Твий ход, брат гном: ", user_cross) 
                return user_cross 
            else: 
                print("Глупий рыцарь построил свой аванпост здесь, выбери другую поляну") 
        else: 
            print("Кажется ты съел что-то не то, попробуй сделать это по другому")
def empty_cell(row, col): 
    cell = field[row][col] 
    if (cell == '(   )'): 
        return True 
    else: 
        return False 


def count_empty_cells(): 
    count = 0 
    for row in field: 
        for cell in row: 
            if cell == '(   )': 
                count += 1 
    return count 


def check_row(row, sym): 
    count = 0 
    for col in range(N): 
        val = field[row][col] 
        if (val == sym): 
            count += 1 

    return count == 3 


def check_col(col, sym): 
    count = 0 
    for row in range(N): 
        val = field[row][col] 
        if (val == sym): 
            count += 1 

    return count == 3 


def check_diag1(sym): 
    count = 0 
    for i in range(N): 
        val = field[i][i] 
        if (val == sym): 
            count += 1 

    return count == 3 


def check_diag2(sym): 
    count = 0 
    for i in range(N): 
        val = field[i][N - i - 1] 
        if (val == sym): 
            count += 1 

    return count == 3 


def check_win(sym): 
    check = [] 

    for i in range(N): 
        check.append(check_row(i, sym)) 
        check.append(check_col(i, sym)) 

    check.append(check_diag1(sym)) 
    check.append(check_diag2(sym)) 

    return any(check) 


otv="да"
while otv == "да" or otv == "ДА":

    N = 3 
    field = [['(   )' for i in range(N)] for j in range(N)] 
    k_h = 9

    while count_empty_cells() >= 0:
        
        
        fprint(field) 
        user_cross = user1_input() 
        row, col = user_cross[0], user_cross[1] 
        field[row][col] = '|-.-|'
        k_h -= 1
            
        if check_win('|-.-|'): 
            fprint(field) 
            print("Поздравляю, вы искоренили угрозу гномов в нашем королевстве! Слава Империи!") 
            break 
        
        if (k_h == 0):
            fprint(field) 
            print("Поздравляю, гномы и рыцари достигли согласия")
            break
        
        fprint(field)
        user_cross = user2_input() 
        row, col = user_cross[0], user_cross[1] 
        field[row][col] = '(.^.)'
        k_h -= 1
        
        if check_win('(.^.)'): 
            fprint(field) 
            print("Хе-хе-хе, глупий рыцарь не смог победить велики гном! Хе-хе-хе") 
            break

    print("Конец игры")
    print("Хтите снова победить гнома или глупи рыцаря? (ответы: да или ДА, вы не можете отказаться :>)")
    otv=str(input())
